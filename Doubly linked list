#include<stdio.h>
#include<stdlib.h>
struct node
{
    int data;
    struct node *left, *right;
};
struct node *start,*ptr;
struct node* create(int item)
{
    struct node*tmp=(struct node*)malloc(sizeof(struct node));
    tmp->data=item;
    tmp->left=NULL;
    tmp->right=NULL;
    return tmp;
}
void insert_beg(int item)
{
    ptr=create(item);
    if(start==NULL)
        start=ptr;
    else
    {
        ptr->right=start;
        start->left=ptr;
        start=ptr;
    }
}
void insert_end(int item)
{
    struct node *tmp;
    ptr=create(item);
    if(start==NULL)
        start=ptr;
    else
    {
        tmp=start;
        while(tmp->right!=NULL)
            tmp=tmp->right;
        ptr->left=tmp;
        tmp->right=ptr;
    }
}
void insert_mid(int item)
{
    struct node *tmp;
    int pos;
    ptr=create(item);
    if(start==NULL)
        start=ptr;
    else
    {
        printf("\nAfter Which Element To Enter?--> ");
        scanf("%d",&pos);
        tmp=start;
        while(tmp->data!=pos&&tmp->right!=NULL)
            tmp=tmp->right;
        ptr->right=tmp->right;
        tmp->right->left=ptr;
        tmp->right=ptr;
        ptr->left=tmp;
    }
}
int checkstart()
{
    if(start==NULL)
    {
        printf("\nThe List is Empty");
        return 1;
    }
    ptr=start;
    if(start->right==NULL)
    {
        printf("\nDeleted Element: %d\n",ptr->data);
        start=NULL;
        free(ptr);
        return 1;
    }
    return 0;
}
void del_beg()
{
    if(checkstart())
        return;
    else
    {
        printf("\nDeleted Element: %d\n",ptr->data);
        start=start->right;
        free(ptr);
    }
}
void del_end()
{
     if(checkstart())
        return;
    else
    {
        while(ptr->right->right!=NULL)
            ptr=ptr->right;
        printf("\nDeleted Element: %d",ptr->right->data);
        free(ptr->right);
        ptr->right=NULL;
    }
}

void del_mid()
{
    struct node *q;
    int srch;
    if(checkstart())
        return;
    else
    {
        printf("Enter the Element To Delete: ");
        scanf("%d",&srch);
        while(ptr->data!=srch)
        {
            q=ptr;
            ptr=ptr->right;
        }
        q->right=ptr->right;
        ptr->right->left=q;
        free(ptr);
    }
}
void display()
{
    if(start==NULL)
        printf("\nList is Empty\n");
    else
    {
        ptr=start;
        while(ptr!=NULL)
        {
            printf("%d\t",ptr->data);
            ptr=ptr->right;
        }
    }
}
void main()
{
    int item, choice;
    start=NULL;
    printf("1. Insert at Beginning\n2. Insert at End\n3. Insert at Middle\n4. Delete at Beginning\n5. Delete at End\n6. Delete at Middle\n7. Display\n8. Exit\n");
    while(1)
    {
        printf("\nChoice: ");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1: printf("\nEnter the Item: ");
                    scanf("%d",&item);
                    insert_beg(item);
                    break;
            case 2: printf("\nEnter the Item: ");
                    scanf("%d",&item);
                    insert_end(item);
                    break;
            case 3: printf("\nEnter the Item: ");
                    scanf("%d",&item);
                    insert_mid(item);
                    break;
            case 4: del_beg();
                    break;
            case 5: del_end();
                    break;
            case 6: del_mid();
                    break;
            case 7: display();
                    break;
            case 8:
                    exit(0);
            default: exit(0);
        }
    }
}
